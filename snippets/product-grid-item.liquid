{% comment %}
  @param product {Object} Required to show product information
  @param recently_viewed {Boolean} Render card in recently viewed style
  @param countdown_timer {Boolean} Render card in countdown timer style
  @param product_compare {Boolean} Render card in product compare style
  @param context {String} The snippet context
  @param index {Number} The 1-based index of the current iteration
  @param products_per_row {String} The number of products per row
{% endcomment %}

{% liquid
  assign recently_viewed = recently_viewed | default: nil
  assign countdown_timer = countdown_timer | default: nil
  assign product_compare = product_compare | default: nil
  assign product_grid_show_second_image = settings.product_grid_show_second_image
  assign emphasize_price = settings.product_grid_emphasize_price
  assign quick_shop_display = settings.product_grid_quick_shop_display
  assign enable_quickshop = settings.product_grid_enable_quickshop
  assign atc_display = settings.product_grid_show_atc
  assign atc_button = settings.product_grid_show_atc_button
  assign money_format = shop.money_format | strip_html

  if product_compare
    assign enable_quickshop = false
    assign atc_button = true
  endif

  assign performance_lazyload = true
  if context == 'collection'
    assign products_per_row = products_per_row | plus: 0
    if index <= products_per_row
      assign performance_lazyload = false
    endif
  endif
%}

{% if product %}
  {% assign compare_at_price = product.compare_at_price %}
  {% assign compare_at_price_varies = product.compare_at_price_varies %}
  {% assign price = product.price %}
  {% assign price_varies = product.price_varies %}
  {% assign product_available = product.available %}
  {% assign product_title = product.title %}
  {% assign product_vendor = product.vendor %}
  {% assign product_link = product.url | within: collection %}
  {% assign product_description = product.description | strip_html %}
  {% assign product_description_size = product.description | strip_html | size %}
{% else %}
  {% assign onboarding = true %}
  {% assign compare_at_price = 1999 %}
  {% assign compare_at_price_varies = false %}
  {% assign price = 1999 %}
  {% assign price_varies = false %}
  {% assign product_available = true %}
  {% assign product_title = 'onboarding.product.title' | t %}
  {% assign product_vendor = 'onboarding.product.vendor' | t %}
  {% assign product_link = '#' %}
{% endif %}

{% assign on_sale = false %}
{% for variant in product.variants %}
  {% if variant.compare_at_price > variant.price %}
    {% assign on_sale = true %}
    {% break %}
  {% endif %}
{% endfor %}

{% assign has_variants = false %}
{% unless product.has_only_default_variant %}
  {% assign has_variants = true %}
{% endunless %}

{% assign consistent_saved = false %}
{% capture consistent_savings %}
  {%
    render 'consistent-savings',
    variants: product.variants,
    on_sale: on_sale
  %}
{% endcapture %}
{% if consistent_savings contains 'true' %}
  {% assign consistent_saved = true %}
{% endif %}

{%- comment -%} Build price block (handles sale and from-price) {%- endcomment -%}
{%- capture product_item_price -%}
  {%- render 'product-price',
    product: product,
    price: price,
    price_varies: price_varies,
    compare_at_price: compare_at_price,
    compare_at_price_varies: compare_at_price_varies,
    on_sale: on_sale,
    show_saved: consistent_saved,
    include_range: true
  -%}
{%- endcapture -%}

{%- capture classes -%}
  productgrid--item
  imagestyle--{% if settings.product_grid_image_crop and settings.product_grid_image_style != 'natural' %}cropped-{% endif %}{{ settings.product_grid_image_style }}
  {% unless product.featured_media.preview_image %}imagestyle--no-image{% endunless %}
  {% if on_sale %}productitem--sale{% endif %}
  {% if emphasize_price %}productitem--emphasis{% endif %}
  {% if recently_viewed %}product-recently-viewed-card{% endif %}
  {% if product_compare %}product-compare-card{% endif %}
  {% if atc_display == 'always' or quick_shop_display == 'always' %}show-actions--mobile{% endif %}
{%- endcapture -%}

{%- assign show_swatches = false -%}
{%- comment -%} Use media object, not .src string {%- endcomment -%}
{%- assign initial_image = product.featured_media | default: product.featured_image -%}

{%- if settings.swatches_enable and recently_viewed != true -%}
  {%- for option in product.options_with_values -%}
    {%- assign swatch_trigger = settings.swatches_swatch_trigger | strip | downcase -%}
    {%- assign option_name = option.name | downcase -%}
    {%- if option_name == swatch_trigger -%}
      {%- assign show_swatches = true -%}
      {%- assign swatch_values = option.values -%}
      {%- assign swatch_values_count = option.values.size -%}
      {%- assign swatch_option_key = 'option' | append: forloop.index -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}

  {% if section.settings.filter_style == 'groups' and current_tags and show_swatches %}
    {% for tag in current_tags %}
      {% assign tag_group = tag | split: '_' | first | downcase %}
      {% if tag_group == swatch_trigger %}
        {% assign active_swatch_name = tag | split: '_' | last | downcase %}
        {% for variant in product.variants %}
          {% assign option_value = variant[swatch_option_key] | downcase %}
          {% if option_value == active_swatch_name %}
            {% if variant.image %}
              {% assign initial_image = variant.image %}
            {% endif %}
            {% break %}
          {% endif %}
        {% endfor %}
        {% break %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% capture product_item_swatches %}
    {%- if show_swatches -%}
      <div
        class="
          productitem--swatches
          {% if settings.swatches_shape == 'square' and settings.swatches_option_style == 'variant_image' %}
            swatches-variant-images-square
          {% endif %}
        "
        data-swatches
      >
        <script type="application/json" data-swatch-data>
          {
            "swatchOptionKey": {{ swatch_option_key | json }},
            "variants": {{ product.variants | json }}
          }
        </script>
        <form
          class="productitem--swatches-container"
          data-swatches-container
          aria-label="{{ 'general.accessibility.swatch_options' | t: swatch_trigger: settings.swatches_swatch_trigger, product_title: product.title }}"
        >
          {% for swatch_value in swatch_values %}
            {% assign swatch_value_downcased = swatch_value | downcase %}
            <label>
              <input
                class="productitem--swatches-input sold_out_option--{{ settings.sold_out_options }}"
                type="radio"
                tabindex="0"
                name="swatch"
                value="{{ swatch_value | escape }}"
                aria-label="{{ swatch_value | escape }}"
                {% if swatch_value_downcased == active_swatch_name %}checked{% endif %}
              >
              {% assign use_variant_images = false %}
              {% if settings.swatches_option_style == 'variant_image' %}
                {% assign use_variant_images = true %}
              {% endif %}
              {% assign use_aspect_ratio = false %}
              {% if settings.swatches_shape == 'square' %}
                {% assign use_aspect_ratio = true %}
              {% endif %}
              {%- capture swatch_styles -%}
                {%
                  render 'swatch-styles',
                  color_name: swatch_value,
                  use_variant_images: use_variant_images,
                  swatch_product: product,
                  swatch_option_key: swatch_option_key,
                  swatch_size: settings.swatches_product_card_size,
                  use_aspect_ratio: use_aspect_ratio,
                %}
              {%- endcapture -%}
              <div
                class="productitem--swatches-swatch-wrapper"
                data-swatch-tooltip="{{ swatch_value | escape }}"
                data-swatch
                style="{{ swatch_styles | split: '/* variables */' | last | remove: '/* variables */'}}"
              >
                <div class="productitem--swatches-swatch">
                  <div
                    class="productitem--swatches-swatch-inner"
                    style="{{ swatch_styles | split: '/* variables */' | first }}"
                  >
                  </div>
                </div>
              </div>
            </label>
          {% endfor %}
        </form>
        <button
          class="productitem--swatches-count-wrapper"
          tabindex="0"
          data-swatch-count-wrapper
        >
          <span class="visually-hidden">
            {{- 'general.accessibility.swatches_toggle' | t: swatch_trigger: settings.swatches_swatch_trigger -}}
          </span>
          <div class="productitem--swatches-count" aria-hidden="true" data-swatch-count>+</div>
        </button>
      </div>
    {%- endif -%}
  {% endcapture %}
{%- endif -%}

<div
  class="{{ classes | strip_newlines }}"
  data-product-item
  data-product-quickshop-url="{{ product_link }}"
  {% if recently_viewed %}
    data-recently_viewed-card
  {% endif %}
>
  <div class="productitem" data-product-item-content>
    {% assign template_allows_compare = settings.enable_product_compare %}
    {% if template.name == 'cart' %}
      {% assign template_allows_compare = false %}
    {% elsif template.name == 'product' and template.suffix contains 'compare' %}
      {% assign template_allows_compare = false %}
    {% endif %}
    {% if onboarding or countdown_timer %}
      {% assign template_allows_compare = false %}
    {% endif %}

    {% if template_allows_compare %}
      {% capture product_compare_image %}
        {% if initial_image %}
          {{ initial_image
            | image_url: width: 250
            | image_tag:
                loading: 'lazy',
                class: 'productitem--image-primary',
                alt: product.title }}
        {% else %}
          {{ 'image' | placeholder_svg_tag: 'placeholder--image' }}
        {% endif %}
      {% endcapture %}

      {% unless product_compare or recently_viewed %}
        <script type="application/json" data-product-compare-data>
          {
            "title": {{ product.title | json }},
            "handle": {{ product.handle | json }},
            "image": {{ product_compare_image | json }},
            "imageAspectRatio": {{ initial_image.aspect_ratio | default: '1/1' | json }},
            "url": {{ product.url | json }}
          }
        </script>

        <div
          class="
            productitem__compare-wrapper
            productitem__compare-wrapper-{{ settings.product_compare_display }}
          "
          data-compare-item-wrapper
        >
          <div class="productitem__compare" data-compare-item>
            <input
              class="productitem__compare-checkbox"
              id="productitem__compare-checkbox-{{ product.id }}"
              type="checkbox"
              data-compare-checkbox
            >
            <label class="productitem__compare-checkbox-label" for="productitem__compare-checkbox-{{ product.id }}">
              <span class="productitem__compare-checkbox-icon">
                {%
                  render 'icon-checkmark-animated',
                  animation_state: 'unchecked',
                %}
              </span>
              <span class="productitem__compare-checkbox-text">
                {{ 'product_compare.compare' | t }}
              </span>
            </label>
          </div>
        </div>
      {% endunless %}
    {% endif %}

    <!-- IMAGE BLOCK -->
    <div class="productitem__image-container">
      <a
        class="productitem--image-link"
        href="{{ product.url | within: collection }}"
        tabindex="-1"
        data-product-page-link
      >
        <figure
          class="productitem--image"
          data-product-item-image
          {%- if initial_image and initial_image.aspect_ratio -%}
            style="--product-grid-item-image-aspect-ratio: {{ initial_image.aspect_ratio }};"
          {%- endif -%}
        >
          {%- if initial_image -%}
            {{ initial_image
              | image_url: width: 736
              | image_tag:
                  loading: 'lazy',
                  class: 'productitem--image-primary',
                  sizes: '(max-width: 749px) 50vw, 25vw',
                  alt: product.title }}
          {%- else -%}
            {{ 'image' | placeholder_svg_tag: 'placeholder--image' }}
          {%- endif -%}

          <span class="visually-hidden">{{ product.title }}</span>
        </figure>
      </a>
    </div>

    <div class="productitem--info">
      <h2 class="productitem--title" style="font-family:'Tahoma', Arial, sans-serif; font-size:15px; font-weight:400; line-height:1.1; color:#333333; text-align:center;">
        <a href="{{ product_link }}" data-product-page-link style="color:#333333;">
          {{ product_title }}
        </a>
      </h2>
      {%- comment -%}
      <!-- Judge.me preview badge placeholder (enable after Judge.me install) -->
      <div class="jdgm-widget jdgm-preview-badge" data-id="{{ product.id }}"></div>
      {%- endcomment -%}

      {%- assign vsku = product.selected_or_first_available_variant.sku | default: product.variants.first.sku -%}
      {%- if vsku != blank -%}
        <div class="product-sku" style="font-family:'Tahoma', Arial, sans-serif; font-size:12px; font-weight:400; line-height:1; color:#9D9D9D; text-align:center; margin-top:4px;">SKU: {{ vsku }}</div>
      {%- endif -%}

      <div class="product-price" style="font-family:'Tahoma', Arial, sans-serif; font-size:14px; font-weight:400; line-height:1; color:#222222; text-align:center; margin-top:4px;">ab {{ product.price_min | money }}</div>
      </div>

      {% unless recently_viewed or countdown_timer %}
      {% if enable_quickshop or atc_button %}
        {% assign quick_shop_text = 'product.buttons.quick_shop' | t %}
        {% assign quick_buy_text = 'product.buttons.add_to_cart' | t %}

        {% assign quick_shop_classes = 'productitem--action-trigger button-secondary' %}
        {% assign quick_buy_classes = 'productitem--action-trigger productitem--action-atc button-primary' %}

        {% if has_variants %}
          {% assign quick_buy_text = 'product.buttons.choose_options' | t %}
        {% else %}
          {% if product.template_suffix contains 'pre-order' %}
            {% assign quick_buy_text = 'product.buttons.pre_order' | t %}
          {% endif %}
        {% endif %}

        {% unless product_available %}
          {% assign quick_buy_text = 'product.buttons.sold_out' | t %}
          {% assign quick_buy_classes = quick_buy_classes | append: ' disabled' %}
        {% endunless %}

        <div class="productitem--actions" data-product-actions>
          <div class="productitem--listview-price" style="text-align:center;">
            AB {{ product.price_min | money_without_trailing_zeros }}
          </div>

          <div class="productitem--listview-badge">
            {%- comment -%}
            {% render 'product-badge',
              product: product,
              class_root: 'productitem',
              product_available: product_available,
              price: price,
              price_varies: price_varies,
              compare_at_price: compare_at_price,
              compare_at_price_varies: compare_at_price_varies,
              on_sale: on_sale,
              show_saved: consistent_saved,
              include_range: true
            %}
            {%- endcomment -%}
          </div>

          {% if enable_quickshop %}
            <div
              class="
                productitem--action
                quickshop-button
                {% if quick_shop_display == 'desktop' %}productitem-action--desktop{% endif %}
              "
            >
              <button
                class="{{ quick_shop_classes }}"
                data-quickshop-full
                {% if settings.gallery_thumbnail_position == 'left' %}
                  data-thumbs-left
                {% endif %}
                {% if product == false %}
                  disabled
                {% endif %}
                type="button"
              >
                {{ quick_shop_text }}
              </button>
            </div>
          {% endif %}

          {% if atc_button %}
            <div
              class="
                productitem--action
                atc--button
                {% if atc_display == 'desktop' %}productitem-action--desktop{% endif %}
              "
            >
              <button
                class="{{ quick_buy_classes }}"
                type="button"
                aria-label="{{ quick_buy_text }}"
                {% unless has_variants %}
                  data-quick-buy
                {% else %}
                  data-quickshop-slim
                {% endunless %}
                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                {% if product == false or product_available == false %}
                  disabled
                {% endif %}
              >
                <span class="atc-button--text">
                  {{ quick_buy_text }}
                </span>
                <span class="atc-button--icon">
                  {%- render 'icon-spinner' -%}
                </span>
              </button>
            </div>
          {% endif %}
        </div>
      {% endif %}
    {% endunless %}
  </div>
</div>

{% if atc_button %}
  <script type="application/json" data-quick-buy-settings>
    {
      "cart_redirection": {{ settings.enable_cart_redirection | json }},
      "money_format": {{ shop.money_format | strip_html | json }}
    }
  </script>
{% endif %}

<style>
  /* remove card chrome */
  .productgrid--item,
  .productitem { border:0 !important; box-shadow:none !important; }

  /* image flush to edges */
  .productitem__image-container,
  .productitem--image-link,
  .productitem--image { margin:0 !important; padding:0 !important; border:0 !important; }
  .productitem--image img { display:block !important; width:100% !important; height:auto !important; object-fit:cover; }

  /* align cards: image on top, info sticks to bottom */
  .productitem { display:flex; flex-direction:column; }
  .productitem--info { margin-top:auto; }
</style>
